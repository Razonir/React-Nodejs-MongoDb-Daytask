{"ast":null,"code":"/*!\n * export-dirs <https://github.com/jonschlinkert/export-dirs>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nmodule.exports = function exportDirs(dir) {\n  if (typeof dir !== 'string') {\n    throw new TypeError('export-dirs expects `dir` to be a string.');\n  }\n  var dirs = tryReaddir(dir);\n  var len = dirs.length;\n  var res = {};\n  res._ = {};\n  while (len--) {\n    var name = dirs[len];\n    var fp = path.resolve(dir, name);\n    if (fs.statSync(fp).isDirectory()) {\n      var fns = tryRequire(fp);\n      for (var key in fns) {\n        if (fns.hasOwnProperty(key)) {\n          res._[key] = fns[key];\n        }\n      }\n      res[name] = fns;\n    } else if (isValid(fp)) {\n      name = basename(name);\n      res[name] = res._[name] = require(fp);\n    }\n  }\n  return res;\n};\nfunction isValid(fp) {\n  return fp.indexOf('index.js') === -1 && fp.substr(-3) === '.js';\n}\nfunction basename(fp) {\n  return fp.slice(0, fp.length - 3);\n}\nfunction tryReaddir(fp) {\n  try {\n    return fs.readdirSync(fp);\n  } catch (err) {\n    err.origin = __dirname;\n    err.msg = 'export-dirs cannot read directory: ' + fp;\n    throw new Error(err);\n  }\n}\nfunction tryRequire(fp) {\n  try {\n    return require(fp);\n  } catch (err) {\n    err.origin = __dirname;\n    err.msg = 'export-dirs cannot require: ' + fp;\n    throw new Error(err);\n  }\n}","map":{"version":3,"names":["fs","require","path","module","exports","exportDirs","dir","TypeError","dirs","tryReaddir","len","length","res","_","name","fp","resolve","statSync","isDirectory","fns","tryRequire","key","hasOwnProperty","isValid","basename","indexOf","substr","slice","readdirSync","err","origin","__dirname","msg","Error"],"sources":["C:/Users/razoi/Desktop/full-stack/React-Nodejs-MongoDb-Daytask/frontend/node_modules/export-dirs/index.js"],"sourcesContent":["/*!\n * export-dirs <https://github.com/jonschlinkert/export-dirs>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\nmodule.exports = function exportDirs(dir) {\n  if (typeof dir !== 'string') {\n    throw new TypeError('export-dirs expects `dir` to be a string.');\n  }\n\n  var dirs = tryReaddir(dir);\n  var len = dirs.length;\n  var res = {}\n  res._ = {};\n\n  while (len--) {\n    var name = dirs[len];\n    var fp = path.resolve(dir, name);\n    if (fs.statSync(fp).isDirectory()) {\n      var fns = tryRequire(fp);\n\n      for (var key in fns) {\n        if (fns.hasOwnProperty(key)) {\n          res._[key] = fns[key];\n        }\n      }\n      res[name] = fns;\n    } else if (isValid(fp)) {\n      name = basename(name);\n      res[name] = res._[name] = require(fp);\n    }\n  }\n  return res;\n};\n\nfunction isValid(fp) {\n  return fp.indexOf('index.js') === -1\n    && fp.substr(-3) === '.js';\n}\n\nfunction basename(fp) {\n  return fp.slice(0, fp.length - 3);\n}\n\nfunction tryReaddir(fp) {\n  try {\n    return fs.readdirSync(fp);\n  } catch(err) {\n    err.origin = __dirname;\n    err.msg = 'export-dirs cannot read directory: ' + fp;\n    throw new Error(err);\n  }\n}\n\nfunction tryRequire(fp) {\n  try {\n    return require(fp);\n  } catch(err) {\n    err.origin = __dirname;\n    err.msg = 'export-dirs cannot require: ' + fp;\n    throw new Error(err);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAE1BE,MAAM,CAACC,OAAO,GAAG,SAASC,UAAU,CAACC,GAAG,EAAE;EACxC,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IAC3B,MAAM,IAAIC,SAAS,CAAC,2CAA2C,CAAC;EAClE;EAEA,IAAIC,IAAI,GAAGC,UAAU,CAACH,GAAG,CAAC;EAC1B,IAAII,GAAG,GAAGF,IAAI,CAACG,MAAM;EACrB,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZA,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC;EAEV,OAAOH,GAAG,EAAE,EAAE;IACZ,IAAII,IAAI,GAAGN,IAAI,CAACE,GAAG,CAAC;IACpB,IAAIK,EAAE,GAAGb,IAAI,CAACc,OAAO,CAACV,GAAG,EAAEQ,IAAI,CAAC;IAChC,IAAId,EAAE,CAACiB,QAAQ,CAACF,EAAE,CAAC,CAACG,WAAW,EAAE,EAAE;MACjC,IAAIC,GAAG,GAAGC,UAAU,CAACL,EAAE,CAAC;MAExB,KAAK,IAAIM,GAAG,IAAIF,GAAG,EAAE;QACnB,IAAIA,GAAG,CAACG,cAAc,CAACD,GAAG,CAAC,EAAE;UAC3BT,GAAG,CAACC,CAAC,CAACQ,GAAG,CAAC,GAAGF,GAAG,CAACE,GAAG,CAAC;QACvB;MACF;MACAT,GAAG,CAACE,IAAI,CAAC,GAAGK,GAAG;IACjB,CAAC,MAAM,IAAII,OAAO,CAACR,EAAE,CAAC,EAAE;MACtBD,IAAI,GAAGU,QAAQ,CAACV,IAAI,CAAC;MACrBF,GAAG,CAACE,IAAI,CAAC,GAAGF,GAAG,CAACC,CAAC,CAACC,IAAI,CAAC,GAAGb,OAAO,CAACc,EAAE,CAAC;IACvC;EACF;EACA,OAAOH,GAAG;AACZ,CAAC;AAED,SAASW,OAAO,CAACR,EAAE,EAAE;EACnB,OAAOA,EAAE,CAACU,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAC/BV,EAAE,CAACW,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK;AAC9B;AAEA,SAASF,QAAQ,CAACT,EAAE,EAAE;EACpB,OAAOA,EAAE,CAACY,KAAK,CAAC,CAAC,EAAEZ,EAAE,CAACJ,MAAM,GAAG,CAAC,CAAC;AACnC;AAEA,SAASF,UAAU,CAACM,EAAE,EAAE;EACtB,IAAI;IACF,OAAOf,EAAE,CAAC4B,WAAW,CAACb,EAAE,CAAC;EAC3B,CAAC,CAAC,OAAMc,GAAG,EAAE;IACXA,GAAG,CAACC,MAAM,GAAGC,SAAS;IACtBF,GAAG,CAACG,GAAG,GAAG,qCAAqC,GAAGjB,EAAE;IACpD,MAAM,IAAIkB,KAAK,CAACJ,GAAG,CAAC;EACtB;AACF;AAEA,SAAST,UAAU,CAACL,EAAE,EAAE;EACtB,IAAI;IACF,OAAOd,OAAO,CAACc,EAAE,CAAC;EACpB,CAAC,CAAC,OAAMc,GAAG,EAAE;IACXA,GAAG,CAACC,MAAM,GAAGC,SAAS;IACtBF,GAAG,CAACG,GAAG,GAAG,8BAA8B,GAAGjB,EAAE;IAC7C,MAAM,IAAIkB,KAAK,CAACJ,GAAG,CAAC;EACtB;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}