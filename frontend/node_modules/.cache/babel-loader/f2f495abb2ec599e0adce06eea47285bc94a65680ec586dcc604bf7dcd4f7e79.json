{"ast":null,"code":"import { useRecoilState } from \"recoil\";\nexport { useFetchWrapper };\nfunction useFetchWrapper() {\n  return {\n    get: request(\"GET\"),\n    post: request(\"POST\"),\n    put: request(\"PUT\"),\n    delete: request(\"DELETE\")\n  };\n  function request(method) {\n    let token = localStorage.getItem('token');\n    const myHeaders = new Headers();\n    myHeaders.append('Content-Type', 'application/json');\n    myHeaders.append('Authorization', token);\n    return (url, body) => {\n      const requestOptions = {\n        method,\n        headers: {\n          myHeaders\n        }\n      };\n      if (body) {\n        requestOptions.headers[\"Content-Type\"] = \"application/json\";\n        requestOptions.body = JSON.stringify(body);\n      }\n      return fetch(url, requestOptions).then(handleResponse);\n    };\n  }\n  function handleResponse(response) {\n    return response.text().then(text => {\n      const data = text && JSON.parse(text);\n      if (!response.ok) {\n        var _auth;\n        if ([401, 403].includes(response.status) && (_auth = auth) !== null && _auth !== void 0 && _auth.token) {\n          // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n          localStorage.removeItem(\"user\");\n          localStorage.removeItem('isadmin');\n          setAuth(null);\n          setIsAdmin(null);\n          history.push(\"/login\");\n        }\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n      return data;\n    });\n  }\n}","map":{"version":3,"names":["useRecoilState","useFetchWrapper","get","request","post","put","delete","method","token","localStorage","getItem","myHeaders","Headers","append","url","body","requestOptions","headers","JSON","stringify","fetch","then","handleResponse","response","text","data","parse","ok","includes","status","auth","removeItem","setAuth","setIsAdmin","history","push","error","message","statusText","Promise","reject"],"sources":["C:/Users/razoi/Desktop/full-stack/React-Nodejs-MongoDb-Daytask/frontend/src/util/fetch-wrapper.js"],"sourcesContent":["\r\nimport { useRecoilState } from \"recoil\"\r\n\r\nexport { useFetchWrapper };\r\n\r\nfunction useFetchWrapper() {\r\n    return {\r\n        get: request(\"GET\"),\r\n        post: request(\"POST\"),\r\n        put: request(\"PUT\"),\r\n        delete: request(\"DELETE\")\r\n    };\r\n    function request(method) {\r\n        let token = localStorage.getItem('token');\r\n        const myHeaders = new Headers();\r\n        myHeaders.append('Content-Type', 'application/json');\r\n        myHeaders.append('Authorization', token);\r\n        return (url, body) => {\r\n\r\n            const requestOptions = {\r\n                method,\r\n                headers: { myHeaders }\r\n            };\r\n            if (body) {\r\n                requestOptions.headers[\"Content-Type\"] = \"application/json\";\r\n                requestOptions.body = JSON.stringify(body);\r\n            }\r\n            return fetch(url, requestOptions).then(handleResponse);\r\n        };\r\n    }\r\n\r\n    function handleResponse(response) {\r\n        return response.text().then((text) => {\r\n            const data = text && JSON.parse(text);\r\n            if (!response.ok) {\r\n                if ([401, 403].includes(response.status) && auth?.token) {\r\n                    // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\r\n                    localStorage.removeItem(\"user\");\r\n                    localStorage.removeItem('isadmin')\r\n                    setAuth(null);\r\n                    setIsAdmin(null)\r\n                    history.push(\"/login\");\r\n                }\r\n\r\n                const error = (data && data.message) || response.statusText;\r\n                return Promise.reject(error);\r\n            }\r\n\r\n            return data;\r\n        });\r\n    }\r\n}"],"mappings":"AACA,SAASA,cAAc,QAAQ,QAAQ;AAEvC,SAASC,eAAe;AAExB,SAASA,eAAe,GAAG;EACvB,OAAO;IACHC,GAAG,EAAEC,OAAO,CAAC,KAAK,CAAC;IACnBC,IAAI,EAAED,OAAO,CAAC,MAAM,CAAC;IACrBE,GAAG,EAAEF,OAAO,CAAC,KAAK,CAAC;IACnBG,MAAM,EAAEH,OAAO,CAAC,QAAQ;EAC5B,CAAC;EACD,SAASA,OAAO,CAACI,MAAM,EAAE;IACrB,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzC,MAAMC,SAAS,GAAG,IAAIC,OAAO,EAAE;IAC/BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACpDF,SAAS,CAACE,MAAM,CAAC,eAAe,EAAEL,KAAK,CAAC;IACxC,OAAO,CAACM,GAAG,EAAEC,IAAI,KAAK;MAElB,MAAMC,cAAc,GAAG;QACnBT,MAAM;QACNU,OAAO,EAAE;UAAEN;QAAU;MACzB,CAAC;MACD,IAAII,IAAI,EAAE;QACNC,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;QAC3DD,cAAc,CAACD,IAAI,GAAGG,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;MAC9C;MACA,OAAOK,KAAK,CAACN,GAAG,EAAEE,cAAc,CAAC,CAACK,IAAI,CAACC,cAAc,CAAC;IAC1D,CAAC;EACL;EAEA,SAASA,cAAc,CAACC,QAAQ,EAAE;IAC9B,OAAOA,QAAQ,CAACC,IAAI,EAAE,CAACH,IAAI,CAAEG,IAAI,IAAK;MAClC,MAAMC,IAAI,GAAGD,IAAI,IAAIN,IAAI,CAACQ,KAAK,CAACF,IAAI,CAAC;MACrC,IAAI,CAACD,QAAQ,CAACI,EAAE,EAAE;QAAA;QACd,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAACC,QAAQ,CAACL,QAAQ,CAACM,MAAM,CAAC,aAAIC,IAAI,kCAAJ,MAAMtB,KAAK,EAAE;UACrD;UACAC,YAAY,CAACsB,UAAU,CAAC,MAAM,CAAC;UAC/BtB,YAAY,CAACsB,UAAU,CAAC,SAAS,CAAC;UAClCC,OAAO,CAAC,IAAI,CAAC;UACbC,UAAU,CAAC,IAAI,CAAC;UAChBC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC1B;QAEA,MAAMC,KAAK,GAAIX,IAAI,IAAIA,IAAI,CAACY,OAAO,IAAKd,QAAQ,CAACe,UAAU;QAC3D,OAAOC,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;MAChC;MAEA,OAAOX,IAAI;IACf,CAAC,CAAC;EACN;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}