[{"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/index.js":"1","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/reportWebVitals.js":"2","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/App.jsx":"3","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/pages/home/Home.jsx":"4","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/pages/Login/Login.jsx":"5","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/pages/History/History.jsx":"6","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/pages/Setting/Setting.jsx":"7","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/pages/Contact/Contact.jsx":"8","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/services/TaskService.js":"9","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/services/UserService.js":"10","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/services/url.js":"11","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/services/TaskHistoryService.js":"12","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/ItemDone.jsx":"13","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/Item.jsx":"14","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/Popup.jsx":"15","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/PopupRemove.jsx":"16","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/PopupReset.jsx":"17","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/Add.jsx":"18","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/ItemHistory.jsx":"19","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/Layout/Header/Header.jsx":"20"},{"size":492,"mtime":1671781014270,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1671781014270,"results":"23","hashOfConfig":"22"},{"size":1154,"mtime":1671781014270,"results":"24","hashOfConfig":"22"},{"size":3236,"mtime":1671781014270,"results":"25","hashOfConfig":"22"},{"size":7258,"mtime":1671781014270,"results":"26","hashOfConfig":"22"},{"size":1131,"mtime":1671781014270,"results":"27","hashOfConfig":"22"},{"size":933,"mtime":1671781014270,"results":"28","hashOfConfig":"22"},{"size":2747,"mtime":1671781014270,"results":"29","hashOfConfig":"22"},{"size":2521,"mtime":1671781014270,"results":"30","hashOfConfig":"22"},{"size":437,"mtime":1671781014270,"results":"31","hashOfConfig":"22"},{"size":51,"mtime":1671870414062,"results":"32","hashOfConfig":"22"},{"size":587,"mtime":1671781014270,"results":"33","hashOfConfig":"22"},{"size":417,"mtime":1671781014270,"results":"34","hashOfConfig":"22"},{"size":467,"mtime":1671781014270,"results":"35","hashOfConfig":"22"},{"size":848,"mtime":1671781014270,"results":"36","hashOfConfig":"22"},{"size":710,"mtime":1671781014270,"results":"37","hashOfConfig":"22"},{"size":2333,"mtime":1671781014270,"results":"38","hashOfConfig":"22"},{"size":2905,"mtime":1671781014270,"results":"39","hashOfConfig":"22"},{"size":513,"mtime":1671781014270,"results":"40","hashOfConfig":"22"},{"size":2157,"mtime":1671781014270,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1omwqfi",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"45"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"45"},"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/index.js",[],[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/reportWebVitals.js",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/App.jsx",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/pages/home/Home.jsx",["109","110","111"],[],"import React, { useState } from \"react\";\nimport \"./Home.css\";\nimport Item from \"../../components/Item\";\nimport ItemDone from \"../../components/ItemDone\";\nimport Popup from \"../../components/Popup\";\nimport PopupRemove from \"../../components/PopupRemove\";\nimport Add from \"../../components/Add\";\n\nimport { getUserByJWT, getUserDoneByJWT } from '../../services/TaskService'\nimport { useEffect } from \"react\";\nimport Header from \"../../Layout/Header/Header\";\n\nconst Home = () => {\n\n  //popup\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenRemove, setIsOpenRemove] = useState(false);\n\n  //add popup\n  const [add, setAdd] = useState(false);\n\n  //tasks\n  const [task, setTask] = useState('null');\n  const [tasks, setTasks] = useState('null');\n  const [tasksDone, setTasksDone] = useState('null');\n\n  const data = async () => {\n    setTasks(await getUserByJWT());\n    setTasksDone(await getUserDoneByJWT());\n    console.log('tasks')\n  }\n\n  const addTask = async () => {\n    setTasks(await getUserByJWT());\n    console.log('add')\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem('token') == undefined) {\n      window.location = '/login';\n    }\n    if (tasks == \"null\") {\n      data();\n    }\n  }, [])\n\n  return (\n    <div className=\"full\">\n      <Header />\n      <div className=\"content\">\n        {isOpen && <Popup\n          name={task.name}\n          content={task.content}\n          id={task._id}\n          setIsOpen={setIsOpen}\n          data={data}\n        />}\n        {isOpenRemove && <PopupRemove\n          name={task.name}\n          content={task.content}\n          id={task._id}\n          setIsOpenRemove={setIsOpenRemove}\n          data={data}\n        />}\n        {add && <Add\n          name={task.name}\n          content={task.content}\n          id={task._id}\n          setAdd={setAdd}\n          addTask={addTask}\n          \n        />}\n        <div className=\"card\">שיהיה לך יום יפה כמעט כמוך</div>\n        <h1>משימות להיום</h1>\n        <div className=\"tasks\">\n          {Object.keys(tasks).map((keyName) => (\n            <div onClick={() => { setTask(tasks[keyName]); setIsOpen(true) }}>\n              <Item key={keyName} name={tasks[keyName].name}\n                content={tasks[keyName].content}\n\n              />\n            </div>\n          ))}\n          <Item name=\"גרסה משופרת\"\n            content=\"לסיים את היום בלהיות גרסה משופרת של אתמול\"\n            op='0'\n          />\n        </div>\n        <h1>משימות שבוצעו</h1>\n        <div className=\"tasks\">\n          { Object.keys(tasksDone).map((keyName) => (\n            <div onClick={() => { setTask(tasksDone[keyName]); setIsOpenRemove(true) }}>\n              <ItemDone key={keyName} name={tasksDone[keyName].name}\n                content={tasksDone[keyName].content} \n              />\n            </div>\n          ))}\n          <ItemDone name=\"אנרגיה\"\n            content=\"לקום בבוקר עם חיוך ותחושה טובה\"\n          />\n        </div>\n      </div>\n      <div className=\"big\">\n        <div className=\"add-btn\" onClick={() => { setAdd(true) }}>\n          הוסף משימה\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/pages/Login/Login.jsx",["112","113"],[],"import React from \"react\";\nimport { useState } from \"react\";\nimport \"./Login.css\"\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport PopupReset from \"../../components/PopupReset\";\nimport img3d from \"../../assets/GUI/3d.jpg\";\nimport { baseUrl } from \"../../services/url\";\nimport { useEffect } from \"react\";\n\nconst Login = () => {\n    const [full, setFull] = useState(false)\n    const [signIn, setSignIn] = useState(true)\n    const [signUp, setSignUp] = useState(true)\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n\n    const [validated, setValidated] = useState(false);\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleSignUp = async (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity() === false) {\n        } else {\n            try {\n                let res = await fetch(baseUrl + \"/user/signup\", {\n                    method: \"POST\",\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        email: email,\n                        password: password\n                    }),\n                });\n                let resJson = await res.json();\n                if (res.status === 200) {\n                    try {\n                        let res = await fetch(baseUrl + \"/user/contact\", {\n                            method: \"POST\",\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({\n                                phone: email,\n                                content: 'משתמש נרשם',\n                                url: \"daytask app\"\n                            }),\n                        });\n                        let resJson = await res.json();\n                    } catch (err) {\n                        console.log(err);\n                    }\n\n                    let res = await fetch(baseUrl + \"/user/login\", {\n                        method: \"POST\",\n                        headers: { 'Content-Type': 'application/json' },\n                        body: JSON.stringify({\n                            email: email,\n                            password: password\n                        }),\n\n                    });\n                    resJson = await res.json();\n                    localStorage.setItem('token', resJson.token)\n                    setEmail(\"\");\n                    setPassword(\"\");\n                    setMessage(resJson.message);\n                    window.location = '/home'\n\n                } else {\n                    setMessage(resJson.message);\n                }\n            } catch (err) {\n                setMessage(\"תקלה במכשיר שלך, רענן את הדף ונסה שוב\");\n                event.preventDefault();\n                event.stopPropagation();\n                console.log(err);\n            }\n        }\n        setValidated(true);\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n\n    const handleSubmit = async (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity() === false) {\n        } else {\n          try {\n            let res = await fetch(baseUrl + \"/user/login\", {\n              method: \"POST\",\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({\n                email: email,\n                password: password\n              }),\n      \n            });\n            let resJson = await res.json();\n            if (res.status === 200) {\n              localStorage.setItem('token', resJson.token)\n              setMessage(resJson.message);\n              window.location = '/home'\n      \n            } else {\n              setMessage(resJson.message);\n            }\n          } catch (err) {\n            setMessage(\"תקלה במכשיר שלך, רענן את הדף ונסה שוב\");\n            event.preventDefault();\n            event.stopPropagation();\n            console.log(err);\n          }\n        }\n        setValidated(true);\n        event.preventDefault();\n        event.stopPropagation();\n      };\n      \n      useEffect(() => {\n        if (localStorage.getItem('token') != undefined) {\n          window.location = '/';\n        }\n\n      }, [])\n      \n    return (\n        <div className=\"loginpage\">\n            <img src={img3d} alt=\"3dimg\" style={{ maxWidth: '40%' }} />\n            {full || <div className=\"login\" onClick={() => { setSignIn(false); setFull(true) }}>התחבר</div>}\n            {signIn ||\n                <div >\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                        <FloatingLabel controlId=\"floatingInput\" label=\"דואר אלקטרוני\">\n                            <Form.Control required type=\"email\" placeholder=\"דואר\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                        </FloatingLabel>\n                        <FloatingLabel controlId=\"floatingPassword\" label=\"סיסמא\">\n                            <Form.Control required type=\"password\" placeholder=\"סיסמא\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                            <div onClick={() => { setIsOpen(true); }}>שחכתי סיסמא</div>\n\n                        </FloatingLabel>\n                        <Button type=\"submit\">התחבר</Button>\n                    </Form>\n                    {message}\n                </div>\n\n            }\n            {full || <div className=\"signup\" onClick={() => { setSignUp(false); setFull(true) }}>הירשם</div>}\n            {signUp ||\n                <div >\n                    <Form noValidate validated={validated} onSubmit={handleSignUp}>\n                        <FloatingLabel controlId=\"floatingInput\" label=\"דואר אלקטרוני\">\n                            <Form.Control required type=\"email\" placeholder=\"דואר\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                        </FloatingLabel>\n                        <FloatingLabel controlId=\"floatingPassword\" label=\"סיסמא\">\n                            <Form.Control required type=\"password\" placeholder=\"סיסמא\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                        </FloatingLabel>\n                        <Form.Check\n                            type=\"switch\"\n                            id=\"custom-switch\"\n                            label=\"אישור דיוור \"\n                            required\n                        />\n                        <Button type=\"submit\">הירשם</Button>\n                        {message}\n                    </Form>\n                </div>\n            }\n            {!full || <div onClick={() => { setSignIn(true); setSignUp(true); setFull(false) }}>חזור</div>}\n            {isOpen && <PopupReset\n                setIsOpen={setIsOpen}\n            />}\n        </div>\n    );\n}\n\nexport default Login;\n","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/pages/History/History.jsx",["114","115"],[],"import React, { useState } from \"react\";\nimport \"./History.css\";\nimport ItemHistory from \"../../components/ItemHistory\";\n\nimport { getHistory } from '../../services/TaskHistoryService'\nimport { useEffect } from \"react\";\nimport Header from \"../../Layout/Header/Header\";\n\nconst History = () => {\n\n\n    //tasks\n    const [tasks, setTasks] = useState('null');\n\n    const data = async () => {\n        setTasks(await getHistory());\n    }\n\n    useEffect(() => {\n        if (tasks == \"null\") {\n            data();\n        }\n    },[])\n\n    return (\n        <div className=\"full\">\n            <Header />\n            <div className=\"content\">\n                <h1>היסטוריה</h1>\n                <div className=\"tasks\">\n                    {'' || Object.keys(tasks).map((keyName) => (\n                            <ItemHistory key={keyName} name={tasks[keyName].name}\n                                content={tasks[keyName].content}\n                                date={tasks[keyName].date}\n                            />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default History;\n","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/pages/Setting/Setting.jsx",["116"],[],"import React, { useState } from \"react\";\nimport \"./Setting.css\";\nimport Header from \"../../Layout/Header/Header\";\nimport { Link } from \"react-router-dom\";\nimport { remove } from \"../../services/UserService\";\nconst Setting = () => {\n\n    async function logout() {\n        localStorage.clear()\n        window.location = '/';\n    }\n\n    return (\n        <div className=\"full\">\n            <Header />\n            <div className=\"content\">\n                <div className=\"setting\">\n                <div  className=\"link\" onClick={() => {remove(); logout();} }>מחק משתמש</div>\n                <div  className=\"link\" onClick={() => {remove(); logout();} }>מחק היסטוריה</div>\n                <Link to=\"/contact\" className=\"link\">צור קשר</Link>\n                <div  className=\"link\" onClick={() => logout()}>התנתק</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Setting;\n","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/pages/Contact/Contact.jsx",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/services/TaskService.js",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/services/UserService.js",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/services/url.js",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/services/TaskHistoryService.js",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/ItemDone.jsx",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/Item.jsx",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/Popup.jsx",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/PopupRemove.jsx",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/PopupReset.jsx",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/Add.jsx",[],[],"/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/components/ItemHistory.jsx",["117"],[],"import React from \"react\";\nimport \"./ItemHistory.css\"\n\nimport done from \"../assets/GUI/done.png\"\nimport { useState } from \"react\";\n\nconst ItemHistory = (props) => {\n\n\n  return (\n    <div className=\"item-done\">\n      <img src={done} alt=\"done\" className=\"iconitem\" />\n      <div className=\"text\">\n        <div className=\"title\">{props.name}</div>\n        <div className=\"subtitle\">{props.content}</div>\n      </div>\n        <div className=\"date\">{props.date}</div>\n      </div>\n  );\n}\n\nexport default ItemHistory;\n","/home/razo/projects/React-Nodejs-MongoDb-Daytask/frontend/src/Layout/Header/Header.jsx",["118"],[],"import \"./Header.css\";\nimport CIcon from \"../../assets/GUI/icon.png\";\nimport Star from \"../../assets/GUI/star.svg\";\nimport React, { useState } from \"react\";\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n\n    //menu\n    const [left, setLeft] = useState(\"-100%\");\n\n    const menu = () => {\n        if (left == \"-100%\") setLeft(\"0\");\n        else setLeft(\"-100%\")\n    };\n\n\n    async function logout() {\n        localStorage.clear()\n        window.location = '/';\n    }\n\n    return (\n        <div>\n            <div className=\"menu\" style={{ left: left }} onClick={menu}>\n                     <Link to=\"/home\" className=\"link\">בית</Link>\n                     <Link to=\"/history\"  className=\"link\">היסטוריה</Link>\n                    <Link to=\"/contact\" className=\"link\">צור קשר</Link>\n                     <Link to=\"/setting\" className=\"link\">הגדרות</Link>\n                    <div className=\"link\" onClick={() => logout()}>התנתק</div>\n            </div>\n            <div className=\"top\">\n                <div className=\"col\" onClick={menu}>\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        strokeWidth={1.5}\n                        stroke=\"currentColor\"\n                        className=\"icon\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            d=\"M3.75 6.75h16.5M3.75 12h16.5M12 17.25h8.25\"\n                        />\n                    </svg>\n                </div>\n                <div className=\"col\">\n                    <img src={CIcon} alt=\"\" className=\"user\" />\n                    <div className=\"morning\">יום טוב!!</div>\n                </div>\n                <div className=\"col\">\n                    <a href=\"https://www.linkedin.com/in/nir-razo\" >\n                        <img src={Star} alt=\"\" className=\"icon\" />\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header",{"ruleId":"119","severity":1,"message":"120","line":39,"column":39,"nodeType":"121","messageId":"122","endLine":39,"endColumn":41},{"ruleId":"119","severity":1,"message":"120","line":42,"column":15,"nodeType":"121","messageId":"122","endLine":42,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":45,"column":6,"nodeType":"125","endLine":45,"endColumn":8,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":52,"column":29,"nodeType":"129","messageId":"130","endLine":52,"endColumn":36},{"ruleId":"119","severity":1,"message":"131","line":127,"column":43,"nodeType":"121","messageId":"122","endLine":127,"endColumn":45},{"ruleId":"119","severity":1,"message":"120","line":20,"column":19,"nodeType":"121","messageId":"122","endLine":20,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":23,"column":7,"nodeType":"125","endLine":23,"endColumn":9,"suggestions":"132"},{"ruleId":"127","severity":1,"message":"133","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"133","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":13,"column":18,"nodeType":"121","messageId":"122","endLine":13,"endColumn":20},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tasks'. Either include it or remove the dependency array.","ArrayExpression",["134"],"no-unused-vars","'resJson' is assigned a value but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.",["135"],"'useState' is defined but never used.",{"desc":"136","fix":"137"},{"desc":"136","fix":"138"},"Update the dependencies array to be: [tasks]",{"range":"139","text":"140"},{"range":"141","text":"140"},[1207,1209],"[tasks]",[522,524]]